# Google Tasks Integration Schema
# Provides comprehensive task management with Google Tasks API integration

# Enums
enum TaskStatus {
  needsAction
  completed
}

enum TaskType {
  FOLLOW_UP
  PREPARATION
  DEADLINE
  EMAIL
  CALL
  MEETING_OUTCOME
  INTERNAL
}

enum TaskSyncType {
  full_sync
  incremental_sync
  task_list_sync
  task_create
  task_update
  task_delete
}

enum TaskSyncStatus {
  started
  completed
  failed
  partial
}

# Core Types
type TaskList {
  id: ID!
  userId: ID!
  googleTaskListId: String!
  title: String!
  googleUpdatedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  lastSyncedAt: DateTime
  isActive: Boolean!
  
  # Relations
  tasks: [TaskItem!]!
  taskCount: Int!
  completedTaskCount: Int!
  pendingTaskCount: Int!
}

type TaskItem {
  id: ID!
  taskListId: ID!
  userId: ID!
  googleTaskId: String!
  title: String!
  notes: String
  status: TaskStatus!
  dueDate: DateTime
  completedAt: DateTime
  googleUpdatedAt: DateTime
  parentTaskId: ID
  position: Int
  
  # CRM Context
  dealId: ID
  personId: ID
  organizationId: ID
  taskType: TaskType
  
  # Metadata
  createdAt: DateTime!
  updatedAt: DateTime!
  lastSyncedAt: DateTime
  isDeleted: Boolean!
  
  # Relations
  taskList: TaskList!
  parentTask: TaskItem
  subtasks: [TaskItem!]!
  deal: Deal
  person: Person
  organization: Organization
}

type TaskSyncLog {
  id: ID!
  userId: ID!
  syncType: TaskSyncType!
  syncStatus: TaskSyncStatus!
  taskListId: ID
  googleTaskListId: String
  tasksProcessed: Int!
  tasksCreated: Int!
  tasksUpdated: Int!
  tasksDeleted: Int!
  errorMessage: String
  syncDurationMs: Int
  createdAt: DateTime!
  completedAt: DateTime
  
  # Relations
  taskList: TaskList
}

type TaskStats {
  totalTasks: Int!
  completedTasks: Int!
  pendingTasks: Int!
  overdueTasks: Int!
  dueTodayTasks: Int!
  totalTaskLists: Int!
}

# Input Types
input CreateTaskListInput {
  title: String!
}

input UpdateTaskListInput {
  title: String
}

input CreateTaskInput {
  taskListId: ID!
  title: String!
  notes: String
  dueDate: DateTime
  parentTaskId: ID
  
  # CRM Context
  dealId: ID
  personId: ID
  organizationId: ID
  taskType: TaskType
}

input UpdateTaskInput {
  title: String
  notes: String
  status: TaskStatus
  dueDate: DateTime
  parentTaskId: ID
  
  # CRM Context
  dealId: ID
  personId: ID
  organizationId: ID
  taskType: TaskType
}

input TaskFilters {
  status: TaskStatus
  dueMin: DateTime
  dueMax: DateTime
  dealId: ID
  personId: ID
  organizationId: ID
  taskType: TaskType
  hasNoContext: Boolean
}

# Queries
type Query {
  # Task Lists
  taskLists: [TaskList!]!
  taskList(id: ID!): TaskList
  
  # Tasks
  tasks(taskListId: ID!, filters: TaskFilters): [TaskItem!]!
  task(id: ID!): TaskItem
  
  # CRM Context Tasks
  dealTasks(dealId: ID!): [TaskItem!]!
  personTasks(personId: ID!): [TaskItem!]!
  organizationTasks(organizationId: ID!): [TaskItem!]!
  
  # Search and Filter
  searchTasks(query: String!, filters: TaskFilters): [TaskItem!]!
  upcomingTasks(days: Int = 7): [TaskItem!]!
  overdueTasks: [TaskItem!]!
  
  # Statistics
  taskStats: TaskStats!
  
  # Sync Logs
  taskSyncLogs(limit: Int = 50): [TaskSyncLog!]!
}

# Mutations
type Mutation {
  # Task Lists
  createTaskList(input: CreateTaskListInput!): TaskList!
  updateTaskList(id: ID!, input: UpdateTaskListInput!): TaskList!
  deleteTaskList(id: ID!): Boolean!
  
  # Tasks
  createTask(input: CreateTaskInput!): TaskItem!
  updateTask(id: ID!, input: UpdateTaskInput!): TaskItem!
  deleteTask(id: ID!): Boolean!
  
  # Task Status
  completeTask(id: ID!): TaskItem!
  uncompleteTask(id: ID!): TaskItem!
  
  # Task Organization
  moveTask(id: ID!, parentTaskId: ID, previousTaskId: ID): TaskItem!
  
  # Bulk Operations
  clearCompletedTasks(taskListId: ID!): Boolean!
  bulkUpdateTasks(taskIds: [ID!]!, input: UpdateTaskInput!): [TaskItem!]!
  
  # Synchronization
  syncTasksFromGoogle: [TaskSyncLog!]!
  syncTaskList(taskListId: ID!): TaskSyncLog!
  
  # CRM Integration
  createTaskFromDeal(dealId: ID!, title: String!, notes: String, dueDate: DateTime, taskType: TaskType): TaskItem!
  createTaskFromPerson(personId: ID!, title: String!, notes: String, dueDate: DateTime, taskType: TaskType): TaskItem!
  createTaskFromOrganization(organizationId: ID!, title: String!, notes: String, dueDate: DateTime, taskType: TaskType): TaskItem!
  
  # Context Management
  linkTaskToDeal(taskId: ID!, dealId: ID!): TaskItem!
  linkTaskToPerson(taskId: ID!, personId: ID!): TaskItem!
  linkTaskToOrganization(taskId: ID!, organizationId: ID!): TaskItem!
  unlinkTaskFromCrm(taskId: ID!): TaskItem!
} 