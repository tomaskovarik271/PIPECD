"""
AI Agent V2 Health Monitoring Schema
Provides comprehensive health, performance, and security monitoring capabilities
"""

type AgentV2HealthStatus {
  status: String!
  agent: AgentInfo!
  hardening: HardeningHealth!
  database: DatabaseHealth!
  recommendations: [String!]!
}

type AgentInfo {
  version: String!
  status: String!
  lastActivity: String!
}

type HardeningHealth {
  overallHealth: String!
  metrics: HardeningMetrics!
  recommendations: [String!]!
  circuitBreakers: [CircuitBreakerState!]!
  rateLimits: [RateLimitStatus!]!
}

type HardeningMetrics {
  totalExecutions: Int!
  successRate: Float!
  averageExecutionTime: Float!
  circuitBreakersOpen: Int!
  rateLimitViolations: Int!
}

type CircuitBreakerState {
  toolName: String!
  failureCount: Int!
  lastFailure: String
  state: String!
  nextRetryTime: String
}

type RateLimitStatus {
  key: String!
  count: Int!
  resetTime: String!
}

type DatabaseHealth {
  status: String!
  latency: Float!
}

type AgentV2PerformanceMetrics {
  toolMetrics: [ToolMetrics!]!
  conversationMetrics: ConversationMetrics!
  errorAnalysis: ErrorAnalysis!
}

type ToolMetrics {
  toolName: String!
  executions: Int!
  successes: Int!
  averageTime: Float!
  successRate: Float!
}

type ConversationMetrics {
  totalConversations: Int!
  activeConversations: Int!
  averageResponseTime: Float!
}

type ErrorAnalysis {
  commonErrors: [CommonError!]!
  errorRate: Float!
}

type CommonError {
  error: String!
  count: Int!
}

extend type Query {
  """Get comprehensive AI Agent V2 system health status"""
  getAgentV2Health: AgentV2HealthStatus!
  
  """Get detailed performance metrics for AI Agent V2"""
  getAgentV2PerformanceMetrics: AgentV2PerformanceMetrics!
} 