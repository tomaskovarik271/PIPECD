"""
Defines the Person type and related queries/mutations.
"""

# Person GraphQL Schema
# Enhanced with multi-organization support

type Person {
  id: ID!
  created_at: DateTime!
  updated_at: DateTime!
  user_id: ID!
  first_name: String
  last_name: String
  email: String
  phone: String
  notes: String
  
  # Multi-organization support via role-based system
  organizationRoles: [PersonOrganizationRole!]!
  primaryOrganization: Organization
  primaryRole: PersonOrganizationRole
  
  # Legacy organization resolver (for backward compatibility - uses primaryOrganization)
  organization: Organization
  
  # Relationships
  deals: [Deal!]!
  customFieldValues: [CustomFieldValue!]!
}

# NEW: Person Organization Role type
type PersonOrganizationRole {
  id: ID!
  person_id: ID!
  organization_id: ID!
  role_title: String!
  department: String
  is_primary: Boolean!
  status: String!
  start_date: Date
  end_date: Date
  notes: String
  created_at: DateTime!
  updated_at: DateTime!
  created_by_user_id: ID
  
  # Relationships
  person: Person!
  organization: Organization!
}

# NEW: Person History type for audit trails
type PersonHistory {
  id: ID!
  person_id: ID
  user_id: ID
  event_type: String!
  field_name: String
  old_value: JSON
  new_value: JSON
  created_at: DateTime!
  
  # Relationships (nullable since person might be deleted)
  person: Person
}

# Input types for creating/updating person organization roles
input PersonOrganizationRoleInput {
  organization_id: ID!
  role_title: String!
  department: String
  is_primary: Boolean = false
  status: String = "active"
  start_date: Date
  end_date: Date
  notes: String
}

input PersonOrganizationRoleUpdateInput {
  role_title: String
  department: String
  is_primary: Boolean
  status: String
  start_date: Date
  end_date: Date
  notes: String
}

# Enhanced PersonInput with multi-organization support only
input PersonInput {
  first_name: String
  last_name: String
  email: String
  phone: String
  notes: String
  
  # Multi-organization roles
  organizationRoles: [PersonOrganizationRoleInput!]
  
  # Custom fields
  customFields: [CustomFieldValueInput!]
}

# Enhanced PersonUpdateInput
input PersonUpdateInput {
  first_name: String
  last_name: String
  email: String
  phone: String
  notes: String
  
  # Multi-organization roles (will replace existing roles)
  organizationRoles: [PersonOrganizationRoleInput!]
  
  # Custom fields
  customFields: [CustomFieldValueInput!]
}

# NEW: Queries for person organization roles
extend type Query {
  # Get person organization roles
  personOrganizationRoles(personId: ID!): [PersonOrganizationRole!]!
  
  # Get person history
  personHistory(personId: ID!): [PersonHistory!]!
  
  # Get people by organization (enhanced)
  peopleByOrganization(organizationId: ID!, includeFormerEmployees: Boolean = false): [Person!]!
}

# NEW: Mutations for managing person organization roles
extend type Mutation {
  # Create person organization role
  createPersonOrganizationRole(input: PersonOrganizationRoleInput!, personId: ID!): PersonOrganizationRole!
  
  # Update person organization role
  updatePersonOrganizationRole(id: ID!, input: PersonOrganizationRoleUpdateInput!): PersonOrganizationRole!
  
  # Delete person organization role
  deletePersonOrganizationRole(id: ID!): Boolean!
  
  # Set primary organization role
  setPrimaryOrganizationRole(personId: ID!, roleId: ID!): PersonOrganizationRole!
}

# Simplified type for person dropdowns
type PersonListItem {
  id: ID!
  name: String! # Combined name generated by service
} 